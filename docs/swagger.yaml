openapi: 3.0.0
info:
  title: Alagar server API
  version: 1.0.0
security:
- Authorization: []
tags:
- name: Auth
  description: Operations related to user authentication
- name: User
  description: Operations related to user management
- name: Auto
  description: Operations related to Auto management
- name: Wheel
  description: Operations related to wheel management
- name: Sensor
  description: Operations related to sensor data
- name: Data
  description: Operations related to Sensor Data 
- name: Report
  description: Operations for generating reports
paths:
  /login:
    post:
      tags:
      - Auth
      summary: User login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
      security: []
  /refresh:
    post:
      tags:
      - Auth
      summary: Refresh access token
      responses:
        "200":
          description: Successful token refresh
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /user:
    put:
      tags:
      - User
      summary: Update user password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
        required: true
      responses:
        "200":
          description: Successful password update
    post:
      tags:
      - User
      summary: User registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      responses:
        "200":
          description: Successful registration
      security: []
    get:
      tags:
      - User
      summary: Get user details
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
  /sensors:
    get:
      tags:
        - Sensor
      summary: Provides actual data by car ID
      parameters:
        - name: car_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Sensor data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SensorsData'
  /sensordata:
    post:
      tags:
        - Sensor
      summary: Update an existing sensor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSensorData'
        required: true
      responses:
        "201":
          description: Successful sensor update
  /pressuredata:
    get:
      tags:
        - Data
      summary: Get data by wheel ID
      parameters:
        - name: wheel_id
          in: query
          required: true
          schema:
            type: string
        - name: from
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Sensor data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PressureData'
  /temperaturedata:
    get:
      tags:
        - Data
      summary: Get data by wheel ID
      parameters:
        - name: wheel_id
          in: query
          required: true
          schema:
            type: string
        - name: from
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Sensor data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemperatureData'
  /report:
    get:
      tags:
      - Report
      summary: Generate report
      responses:
        "200":
          description: Report in XLSX format
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/ReportResponse'
  /auto/list:
    get:
      tags:
        - Auto
      summary: Get list of Autos
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: List of Autos
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/AutoResponse'
  /auto/info:
    get:
      tags:
        - Auto
      summary: Get Auto and its wheels by car ID
      parameters:
        - name: car_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Auto details and associated wheels
          content:
            application/json:
              schema:
                type: object
                properties:
                  auto:
                    $ref: '#/components/schemas/AutoResponse'
                  wheels:
                    type: array
                    items:
                      $ref: '#/components/schemas/WheelResponse'
  /auto:
    get:
      tags:
        - Auto
      summary: Get a single Auto by ID
      parameters:
        - name: car_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Vehicle details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoResponse'
    post:
      tags:
      - Auto
      summary: Register a Auto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoRegistration'
        required: true
      responses:
        "200":
          description: Successful Auto registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoResponse'
  /wheels:
    put:
      tags:
      - Wheel
      summary: Update wheel data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WheelChange'
        required: true
      responses:
        "200":
          description: Successful wheel update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WheelResponse'
    post:
      tags:
      - Wheel
      summary: Register a wheel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WheelRegistration'
        required: true
      responses:
        "200":
          description: Successful wheel registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WheelResponse'
    get:
      tags:
      - Wheel
      summary: Get wheel data
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Wheel data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WheelResponse'
  /wheels/{state_number}:
    get:
      tags:
        - Wheel
      summary: Get wheels by state number
      parameters:
        - name: state_number
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of wheels associated with the given state number
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WheelsDataForDevice'
  /breakages:
    get:
      tags:
        - Breakage
      summary: Get breakages by car ID
      parameters:
        - name: car_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Breakage data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BreakageResponse'
    post:
      tags:
        - Breakage
      summary: Register a new breakage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BreakageRegistration'
        required: true
      responses:
        "201":
          description: Successful breakage registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreakageResponse'
components:
  schemas:
    LoginRequest:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    TokenResponse:
      required:
      - accessToken
      - refreshToken
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    UserRegistration:
      required:
      - inn
      - email
      - firstName
      - lastName
      - password
      - phone
      - gender
      - timeZone
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
        phone:
          type: string
        email:
          type: string
        timeZone:
          type: string
          format: date-time
        inn:
          type: string
        password:
          type: string
    UserDetails:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
        phone:
          type: string
        email:
          type: string
        timeZone:
          type: string
          format: date-time
        inn:
          type: string
        password:
          type: string
    UpdatePassword:
      required:
      - newPassword
      type: object
      properties:
        newPassword:
          type: string
    ReportResponse:
      type: string
      format: byte
    AutoRegistration:
      required:
      - axleCount
      - brand
      - companyInn
      - deviceNumber
      - stateNumber
      - uniqueId
      - autoType
      type: object
      properties:
        companyInn:
          type: string
        deviceNumber:
          type: string
        uniqueId:
          type: string
        autoType:
          type: string
        stateNumber:
          type: string
        brand:
          type: string
        axleCount:
          type: integer
    AutoResponse:
      type: object
      properties:
        id:
          type: string
        companyInn:
          type: string
        deviceNumber:
          type: string
        uniqueId:
          type: string
        autoType:
          type: string
        stateNumber:
          type: string
        brand:
          type: string
        axleCount:
          type: integer
    WheelRegistration:
      required:
      - axleNumber
      - maxPressure
      - maxTemperature
      - mileage
      - minPressure
      - minTemperature
      - sensorNumber
      - tireBrand
      - tireCost
      - tireModel
      - tireSize
      - autoId
      - wheelPosition
      - ngp
      - tkvh
      type: object
      properties:
        autoId:
          type: string
        axleNumber:
          type: integer
        wheelPosition:
          type: integer
        sensorNumber:
          type: string
        tireSize:
          type: number
        tireCost:
          type: number
        tireBrand:
          type: string
        tireModel:
          type: string
        minPressure:
          type: number
        mileage:
          type: number
        maxPressure:
          type: number
        minTemperature:
          type: number
        maxTemperature:
          type: number
        ngp:
          type: number
        tkvh:
          type: number
    WheelChange:
      required:
      - id
      - axleNumber
      - maxPressure
      - maxTemperature
      - mileage
      - minPressure
      - minTemperature
      - sensorNumber
      - tireBrand
      - tireCost
      - tireModel
      - tireSize
      - autoId
      - wheelPosition
      - ngp
      - tkvh
      type: object
      properties:
        id:
          type: string
        autoId:
          type: string
        axleNumber:
          type: integer
        wheelPosition:
          type: integer
        sensorNumber:
          type: string
        tireSize:
          type: number
        tireCost:
          type: number
        tireBrand:
          type: string
        tireModel:
          type: string
        minPressure:
          type: number
        mileage:
          type: number
        maxPressure:
          type: number
        minTemperature:
          type: number
        maxTemperature:
          type: number
        ngp:
          type: number
        tkvh:
          type: number
    WheelsDataForDevice:
      type: object
      properties:
        wheel_position:
          type: integer
        sensor_number:
          type: string
        min_pressure:
          type: number
        min_temperature:
          type: number
        max_pressure:
          type: number
        max_temperature:
          type: number
      example:
        wheel_position: 1
        sensor_number: "1a23b"
        min_pressure: 12.34
        min_temperature: 12.34
        max_pressure: 56.78
        max_temperature: 56.78
    WheelResponse:
      type: object
      properties:
        id:
          type: string
        autoId:
          type: string
        axleNumber:
          type: integer
        wheelPosition:
          type: integer
        sensorNumber:
          type: string
        tireSize:
          type: number
        tireCost:
          type: number
        tireBrand:
          type: string
        tireModel:
          type: string
        minPressure:
          type: number
        mileage:
          type: number
        maxPressure:
          type: number
        minTemperature:
          type: number
        maxTemperature:
          type: number
        ngp:
          type: number
        tkvh:
          type: number
      example:
        axleNumber: 0
        maxTemperature: 9.30
        tireBrand: tireBrand
        tireModel: tireModel
        minTemperature: 7.06
        wheelPosition: 6
        minPressure: 5.96
        sensorNumber: sensorNumber
        maxPressure: 2.30
        id: id
        autoId: autoId
        tireCost: 1.46
        tireSize: tireSize
        mileage: 5.63
        ngp: 0.1
        tkvh: 0.3
    BreakageResponse:
      type: object
      properties:
        id:
          type: string
        stateNumber:
          type: string
        type:
          type: string
        description:
          type: string
        datetime:
          type: string
          format: date-tim
    BreakageRegistration:
      type: object
      properties:
        stateNumber:
          type: string
        type:
          type: string
        description:
          type: string
        datetime:
          type: string
          format: date-time
    SensorsData:
      type: object
      properties:
        wheel_position:
          type: integer
        pressure:
          type: number
        temperature:
          type: number
    NewSensorData:
      type: object
      properties:
        device_number:
          type: string
        sensor_number:
          type: string
        pressure:
          type: number
        temperature:
          type: number
        time:
          type: string
          format: date-time
    PressureData:
      type: object
      properties:
        pressure:
          type: number
        time:
          type: string
          format: date-time
    TemperatureData:
      type: object
      properties:
        temperature:
          type: number
        time:
          type: string
          format: date-time
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT